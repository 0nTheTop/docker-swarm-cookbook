{
    "version": "3",
    "templates": [
        {
            "title": "Cloudbeaver (Cookbook)",
            "description": "Cloud Database Manager - Community Edition",
            "note": "Cloud Database Manager - Community Edition.<br> <br> CloudBeaver is a web server which provides rich web interface. Server itself is a Java application, web part is written on TypeScript and React.<br> It is free to use and open-source (licensed under Apache 2 license).<br> See out <a href=\"https://github.com/dbeaver/cloudbeaver/wiki\" target=\"_blank\">WIKI</a> for more details.<br> <br> <br> <a href=\"https://raw.githubusercontent.com/0nTheTop/docker-swarm-cookbook/main/timezones.txt\" target=\"_blank\">timedatectl list-timezones</a> to see all timezones",
            "categories": [
                "Web",
                "Tool",
                "Database",
                "Cookbook"
            ],
            "platform": "linux",
            "name": "cloudbeaver",
            "hostname": "cloudbeaver",
            "container_name": "cloudbeaver",
            "image": "dbeaver/cloudbeaver:latest",
            "ports": [
                "8978:8978/tcp"
            ],
            "restart_policy": "always",
            "env": [
                {
                    "name": "TZ",
                    "label": "Time-Zone",
                    "description": "Time Zone. Default is UTC.",
                    "default": "UTC"
                }
            ],
            "volumes": [
                {
                    "container": "/opt/cloudbeaver/workspace",
                    "bind": "/opt/docker/cloudbeaver/workspace"
                }
            ],
            "labels": [
                {
                    "name": "traefik.enable",
                    "value": "true"
                },
                {
                    "name": "traefik.docker.network",
                    "value": "traefik"
                },
                {
                    "name": "traefik.http.routers.cloudbeaver.rule",
                    "value": "HostRegexp(`^cloudbeaver\\..*`)"
                },
                {
                    "name": "traefik.http.routers.cloudbeaver.service",
                    "value": "cloudbeaver-s"
                },
                {
                    "name": "traefik.http.routers.cloudbeaver.entryPoints",
                    "value": "web"
                },
                {
                    "name": "traefik.http.services.cloudbeaver-s.loadbalancer.server.port",
                    "value": "8978"
                },
                {
                    "name": "traefik.http.services.cloudbeaver-s.loadbalancer.sticky.cookie.name",
                    "value": "stickycookie"
                },
                {
                    "name": "traefik.http.services.cloudbeaver-s.loadbalancer.sticky.cookie.secure",
                    "value": "true"
                }
            ],
            "repository": {
                "url": "https://github.com/0nTheTop/docker-swarm-cookbook/",
                "stackfile": "cookbook/containers/cloudbeaver/None"
            },
            "type": 1,
            "logo": "https://raw.githubusercontent.com/0nTheTop/docker-swarm-cookbook/main/icons/cloudbeaver.png",
            "id": 1
        },
        {
            "title": "lingva-translate (Cookbook)",
            "description": "Alternative front-end for Google Translate, serving as a Free and Open Source translator with over a hundred languages available",
            "note": "<a href=\"https://lingva.thedaviddelta.com/\" target=\"_blank\">Lingva Translate</a> pagr.<br>",
            "categories": [
                "Web",
                "Tool",
                "Database",
                "Cookbook"
            ],
            "platform": "linux",
            "name": "lingva",
            "hostname": "lingva",
            "container_name": "lingva",
            "image": "thedaviddelta/lingva-translate:latest",
            "ports": [
                "3000:3000/tcp"
            ],
            "restart_policy": "always",
            "env": [
                {
                    "name": "site_domain",
                    "label": "site_domain",
                    "description": "Site domain.",
                    "default": "lingva.ml"
                },
                {
                    "name": "force_default_theme",
                    "label": "force_default_theme",
                    "description": "Force default theme.",
                    "default": "light"
                },
                {
                    "name": "default_source_lang",
                    "label": "default_source_lang",
                    "description": "Default source language.",
                    "default": "auto"
                },
                {
                    "name": "default_target_lang",
                    "label": "default_target_lang",
                    "description": "Default target language.",
                    "default": "en"
                }
            ],
            "labels": [
                {
                    "name": "traefik.enable",
                    "value": "true"
                },
                {
                    "name": "traefik.docker.network",
                    "value": "traefik"
                },
                {
                    "name": "traefik.http.routers.lingva.rule",
                    "value": "HostRegexp(`^lingva\\..*`)"
                },
                {
                    "name": "traefik.http.routers.lingva.service",
                    "value": "lingva-s"
                },
                {
                    "name": "traefik.http.routers.lingva.entryPoints",
                    "value": "web"
                },
                {
                    "name": "traefik.http.services.lingva-s.loadbalancer.server.port",
                    "value": "3000"
                },
                {
                    "name": "traefik.http.services.lingva-s.loadbalancer.sticky.cookie.name",
                    "value": "stickycookie"
                },
                {
                    "name": "traefik.http.services.lingva-s.loadbalancer.sticky.cookie.secure",
                    "value": "true"
                }
            ],
            "repository": {
                "url": "https://github.com/0nTheTop/docker-swarm-cookbook/",
                "stackfile": "cookbook/containers/lingva-translate/None"
            },
            "type": 1,
            "logo": "https://raw.githubusercontent.com/0nTheTop/docker-swarm-cookbook/main/icons/lingva-translate.png",
            "id": 2
        },
        {
            "description": "3 Nodes MinIO Cluster",
            "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/minio.png",
            "note": "Please remember that MINIO_ROOT_PASSWORD needs to have min **8** characters.",
            "categories": [
                "Database",
                "Cookbook"
            ],
            "env": [
                {
                    "name": "MINIO_ROOT_PASSWORD",
                    "label": "MINIO_ROOT_PASSWORD",
                    "description": "Password used by the MinIO root user. **It needs to have lenght min 8 characters.**"
                }
            ],
            "title": "Minio cluster (Cookbook)",
            "repository": {
                "url": "https://github.com/0nTheTop/docker-swarm-cookbook/",
                "stackfile": "cookbook/swarmStacks/minio-cluster/docker-stack.yml"
            },
            "name": "minio-cluster",
            "type": 2,
            "platform": "linux",
            "id": 3
        },
        {
            "title": "Traefik (Cookbook)",
            "description": "Traefik v3",
            "platform": "linux",
            "repository": {
                "url": "https://github.com/0nTheTop/docker-swarm-cookbook/",
                "stackfile": "cookbook/swarmStacks/traefik/docker-stack.yml"
            },
            "name": "traefik",
            "categories": [
                "Cookbook"
            ],
            "type": 2,
            "logo": "https://raw.githubusercontent.com/0nTheTop/docker-swarm-cookbook/main/icons/traefik.png",
            "env": [],
            "id": 4
        },
        {
            "title": "Portainer Agent (Cookbook)",
            "repository": {
                "url": "https://github.com/0nTheTop/docker-swarm-cookbook/",
                "stackfile": "cookbook/swarmStacks/portainer_agent/docker-stack.yml"
            },
            "name": "portainer-agent",
            "categories": [
                "Cookbook"
            ],
            "type": 2,
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/0nTheTop/docker-swarm-cookbook/main/icons/portainer_agent.png",
            "description": "portainer agent",
            "env": [],
            "id": 5
        },
        {
            "description": "2 Nodes MySQL Cluster",
            "title": "MySQL Cluster (Cookbook)",
            "categories": [
                "Database",
                "Cookbook"
            ],
            "env": [
                {
                    "name": "MYSQL_ROOT_PASSWORD",
                    "label": "MYSQL_ROOT_PASSWORD",
                    "description": "Password used by the MySQL root user."
                },
                {
                    "name": "MYSQL_DATABASE",
                    "label": "MYSQL_DATABASE",
                    "default": "db",
                    "description": "Name of the database."
                },
                {
                    "name": "MYSQL_ROOT_HOST",
                    "default": "%",
                    "preset": true
                }
            ],
            "repository": {
                "url": "https://github.com/0nTheTop/docker-swarm-cookbook/",
                "stackfile": "cookbook/swarmStacks/mysql-cluster/docker-stack.yml"
            },
            "name": "mysql-cluster",
            "type": 2,
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/0nTheTop/docker-swarm-cookbook/main/icons/mysql-cluster.png",
            "id": 6
        },
        {
            "description": "Windmill is the most popular workflow automation platform for technical teams",
            "title": "Windmill (Cookbook)",
            "categories": [
                "Low code",
                "Automation",
                "Cookbook"
            ],
            "platform": "linux",
            "name": "Windmill",
            "note": "<a href=\"https://www.windmill.dev/\" target=\"_blank\">Windmill Docs</a><br> <br> <br> <a href=\"https://raw.githubusercontent.com/0nTheTop/docker-swarm-cookbook/main/timezones.txt\" target=\"_blank\">timedatectl list-timezones</a> to see all timezones",
            "env": [
                {
                    "name": "TZ",
                    "label": "Time-Zone",
                    "description": "Time Zone. Default is UTC.",
                    "default": "UTC"
                },
                {
                    "name": "POSTGRES_DB",
                    "label": "POSTGRES_DB",
                    "default": "windmill",
                    "description": "Specifies a name for your database or defaults to the POSTGRES_USER value when left blank."
                },
                {
                    "name": "POSTGRES_USER",
                    "label": "POSTGRES_USER",
                    "default": "windmill",
                    "description": "Specifies a user with superuser privileges and a database with the same name. Postgres uses the default user when this is empty."
                },
                {
                    "name": "POSTGRES_PASSWORD",
                    "label": "POSTGRES_PASSWORD",
                    "default": "windmill156b3eiGht",
                    "description": "Password used by the POSTGRES_USER."
                },
                {
                    "name": "WM_PORT",
                    "default": "5678",
                    "description": "The port to run the windmill server on. Default is 5678.",
                    "label": "WM_PORT"
                },
                {
                    "name": "WM_IMAGE",
                    "description": "The image to use for the windmill server. Default is ghcr.io/windmill-labs/windmill:main. Default: ghcr.io/windmill-labs/windmill:main",
                    "select": [
                        {
                            "text": "ghcr.io/windmill-labs/windmill:main",
                            "value": "ghcr.io/windmill-labs/windmill:main",
                            "default": true
                        },
                        {
                            "text": "ghcr.io/windmill-labs/windmill-ee:main",
                            "value": "ghcr.io/windmill-labs/windmill-ee:main"
                        }
                    ],
                    "label": "WM_IMAGE"
                }
            ],
            "repository": {
                "url": "https://github.com/0nTheTop/docker-swarm-cookbook/",
                "stackfile": "cookbook/swarmStacks/windmill/docker-stack.yml"
            },
            "type": 2,
            "logo": "https://raw.githubusercontent.com/0nTheTop/docker-swarm-cookbook/main/icons/windmill.png",
            "id": 7
        },
        {
            "description": "Node-RED is a programming tool for wiring together hardware devices, APIs and online services in new and interesting ways.  It provides a browser-based editor that makes it easy to wire together flows using the wide range of nodes in the palette that can be deployed to its runtime in a single-click.",
            "title": "Node-RED (Cookbook)",
            "categories": [
                "Low code",
                "Cookbook"
            ],
            "env": [
                {
                    "name": "TZ",
                    "label": "Time-Zone",
                    "description": "Time Zone",
                    "default": "UTC"
                }
            ],
            "repository": {
                "url": "https://github.com/0nTheTop/docker-swarm-cookbook/",
                "stackfile": "cookbook/composeStacks/node-red/docker-compose.yml"
            },
            "name": "node-red",
            "type": 3,
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/0nTheTop/docker-swarm-cookbook/main/icons/node-red.png",
            "note": "<br><a href=\"{GITHUB_URL_CONTENT}main/timezones.txt\" target=\"_blank\">timedatectl list-timezones</a> to see all timezones",
            "id": 8
        },
        {
            "description": "Qdrant is an Open-Source Vector Database and Vector Search Engine written in Rust. It provides fast and scalable vector similarity search service.",
            "categories": [
                "Database",
                "Cookbook"
            ],
            "title": "Qdrant (Cookbook)",
            "repository": {
                "url": "https://github.com/0nTheTop/docker-swarm-cookbook/",
                "stackfile": "cookbook/composeStacks/qdrant/docker-compose.yml"
            },
            "name": "qdrant",
            "type": 3,
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/0nTheTop/docker-swarm-cookbook/main/icons/qdrant.png",
            "env": [],
            "id": 9
        },
        {
            "description": "Docker swarm service for automatically updating your services whenever their image is refreshed",
            "note": "Check the <a href=\"https://github.com/containrrr/shepherd\" target=\"_blank\">GitLab documentation</a> to get started.",
            "title": "Shepherd (Cookbook)",
            "repository": {
                "url": "https://github.com/0nTheTop/docker-swarm-cookbook/",
                "stackfile": "cookbook/composeStacks/shepherd/docker-compose.yml"
            },
            "name": "shepherd",
            "categories": [
                "Cookbook"
            ],
            "type": 3,
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/0nTheTop/docker-swarm-cookbook/main/icons/shepherd.png",
            "env": [],
            "id": 10
        },
        {
            "description": "Langflow-AI is a visual framework for building multi-agent and RAG applications. It's open-source, Python-powered, fully customizable, model and vector store agnostic.",
            "title": "Langflow-AI (Cookbook)",
            "categories": [
                "Ai",
                "Low code",
                "Cookbook"
            ],
            "platform": "linux",
            "note": "<a href=\"https://www.docker.com/blog/how-to-use-the-postgres-docker-official-image/\" target=\"_blank\">Postgres Docker Info</a> <br> <a href=\"https://docs.langflow.org/\" target=\"_blank\">Langflow Docs</a><br> <br> <a href=\"https://github.com/langflow-ai/langflow/issues/1708\" target=\"_blank\">Issue 1708</a> In case of error <b>\"An error has occurred while fetching types\"</b> <br> Ensure that env variables are set correctly<br> LANGFLOW_ACCESS_SAME_SITE = <b>lax</b><br> LANGFLOW_ACCESS_SECURE = <b>false</b><br> <b>Note:</b> This error ocure when you access via http and not using SSL proxy. <br> <br> <br> <a href=\"https://raw.githubusercontent.com/0nTheTop/docker-swarm-cookbook/main/timezones.txt\" target=\"_blank\">timedatectl list-timezones</a> to see all timezones",
            "env": [
                {
                    "name": "TZ",
                    "label": "Time-Zone",
                    "description": "Time Zone. Default is UTC.",
                    "default": "UTC"
                },
                {
                    "name": "POSTGRES_USER",
                    "label": "POSTGRES_USER",
                    "default": "langflow",
                    "description": "Specifies a user with superuser privileges and a database with the same name. Postgres uses the default user when this is empty."
                },
                {
                    "name": "POSTGRES_PASSWORD",
                    "label": "POSTGRES_PASSWORD",
                    "default": "langflow345",
                    "description": "Password used by the POSTGRES_USER."
                },
                {
                    "name": "POSTGRES_DB",
                    "label": "POSTGRES_DB",
                    "default": "langflow",
                    "description": "Specifies a name for your database or defaults to the POSTGRES_USER value when left blank."
                },
                {
                    "name": "LANGFLOW_PORT",
                    "default": "7860",
                    "description": "The port to run the Langflow server on. Default is 7860.",
                    "label": "LANGFLOW_PORT"
                },
                {
                    "name": "LANGFLOW_AUTO_LOGIN",
                    "description": "Determines whether Langflow should automatically log users in. Default is True.",
                    "select": [
                        {
                            "text": "True",
                            "value": "true",
                            "default": true
                        },
                        {
                            "text": "False",
                            "value": "false"
                        }
                    ],
                    "label": "LANGFLOW_AUTO_LOGIN"
                },
                {
                    "name": "LANGFLOW_SUPERUSER",
                    "description": "The username of the superuser.",
                    "default": "admin",
                    "label": "LANGFLOW_SUPERUSER"
                },
                {
                    "name": "LANGFLOW_SUPERUSER_PASSWORD",
                    "description": "The password for the superuser.",
                    "label": "LANGFLOW_SUPERUSER_PASSWORD"
                },
                {
                    "name": "LANGFLOW_SECRET_KEY",
                    "description": "A key used for encrypting the superuser's password.",
                    "default": "3l51MUmpvixQPswey-ZnHihM4iMudMQ9zcfuOM0IGrM=",
                    "label": "LANGFLOW_SECRET_KEY"
                },
                {
                    "name": "LANGFLOW_NEW_USER_IS_ACTIVE",
                    "description": "Determines whether new users are automatically activated. Default is False.",
                    "select": [
                        {
                            "text": "True",
                            "value": "true"
                        },
                        {
                            "text": "False",
                            "value": "false",
                            "default": true
                        }
                    ],
                    "label": "LANGFLOW_NEW_USER_IS_ACTIVE"
                },
                {
                    "name": "LANGFLOW_ACCESS_SAME_SITE",
                    "description": "Sets the SameSite attribute of the access token cookie. Options are \"lax\" (default), \"strict,\" and \"none.\"",
                    "select": [
                        {
                            "text": "Lax",
                            "value": "lax",
                            "default": true
                        },
                        {
                            "text": "Strict",
                            "value": "strict"
                        },
                        {
                            "text": "None",
                            "value": "none"
                        }
                    ],
                    "label": "LANGFLOW_ACCESS_SAME_SITE"
                },
                {
                    "name": "LANGFLOW_ACCESS_SECURE",
                    "description": "Enables or disables the Secure attribute of the access token cookie (default is disabled).",
                    "select": [
                        {
                            "text": "True",
                            "value": "true"
                        },
                        {
                            "text": "False",
                            "value": "false",
                            "default": true
                        }
                    ],
                    "label": "LANGFLOW_ACCESS_SECURE"
                },
                {
                    "name": "LANGFLOW_ACCESS_HTTPONLY",
                    "description": "Enables or disables the HttpOnly attribute of the access token cookie (default is disabled).",
                    "select": [
                        {
                            "text": "True",
                            "value": "true"
                        },
                        {
                            "text": "False",
                            "value": "false",
                            "default": true
                        }
                    ],
                    "label": "LANGFLOW_ACCESS_HTTPONLY"
                }
            ],
            "repository": {
                "url": "https://github.com/0nTheTop/docker-swarm-cookbook/",
                "stackfile": "cookbook/composeStacks/langflow-ai/docker-compose.yml"
            },
            "name": "langflow-ai",
            "type": 3,
            "logo": "https://raw.githubusercontent.com/0nTheTop/docker-swarm-cookbook/main/icons/langflow-ai.png",
            "id": 11
        },
        {
            "description": "Infinitely scalable, event-driven, language-agnostic orchestration and scheduling platform to manage millions of workflows declaratively in code.",
            "title": "Kestra (Cookbook)",
            "categories": [
                "Low code",
                "Cookbook"
            ],
            "platform": "linux",
            "note": "<a href=\"https://kestra.io/docs\" target=\"_blank\">Kestra Docs</a><br> <a href=\"https://github.com/kestra-io/kestra\" target=\"_blank\">Kestra Github</a> | Report <a href=\"https://github.com/kestra-io/kestra/issues\" target=\"_blank\">Issue</a><br> <a href=\"https://hub.docker.com/r/kestra/kestra\" target=\"_blank\">Kestra Docker Hub</a><br> <a href=\"https://www.docker.com/blog/how-to-use-the-postgres-docker-official-image/\" target=\"_blank\">Postgres Docker Info</a> <br> <br> <b>Note:</b><br> Remember to create on host tmp folder<br> - mkdir /tmp/kestra-wd/ <br> - chmod -R 0777 /tmp/kestra-wd/ <br> <br> <br> <a href=\"https://raw.githubusercontent.com/0nTheTop/docker-swarm-cookbook/main/timezones.txt\" target=\"_blank\">timedatectl list-timezones</a> to see all timezones",
            "env": [
                {
                    "name": "TZ",
                    "label": "Time-Zone",
                    "description": "Time Zone. Default is UTC.",
                    "default": "UTC"
                },
                {
                    "name": "POSTGRES_DB",
                    "label": "POSTGRES_DB",
                    "default": "kestra",
                    "description": "Specifies a name for your database or defaults to the POSTGRES_USER value when left blank."
                },
                {
                    "name": "POSTGRES_USER",
                    "label": "POSTGRES_USER",
                    "default": "kestra",
                    "description": "Specifies a user with superuser privileges and a database with the same name. Postgres uses the default user when this is empty."
                },
                {
                    "name": "POSTGRES_PASSWORD",
                    "label": "POSTGRES_PASSWORD",
                    "default": "k3str4",
                    "description": "Password used by the POSTGRES_USER."
                },
                {
                    "name": "KESTRA_PORT",
                    "default": "8080",
                    "description": "Port to expose kestra. Default is 8080.",
                    "label": "KESTRA_PORT"
                }
            ],
            "repository": {
                "url": "https://github.com/0nTheTop/docker-swarm-cookbook/",
                "stackfile": "cookbook/composeStacks/kestra/docker-compose.yml"
            },
            "name": "kestra",
            "type": 3,
            "logo": "https://raw.githubusercontent.com/0nTheTop/docker-swarm-cookbook/main/icons/kestra.png",
            "id": 12
        },
        {
            "description": "Open source low-code tool for developers to build customized LLM orchestration flow & AI agents",
            "title": "FlowiseAI (Cookbook)",
            "categories": [
                "Low code",
                "Ai",
                "Cookbook"
            ],
            "platform": "linux",
            "note": "<a href=\"https://flowiseai.com/\" target=\"_blank\">FlowiseAI Docs</a><br> <a href=\"https://github.com/FlowiseAI/Flowise\" target=\"_blank\">FlowiseAI Github</a> | Report <a href=\"https://github.com/FlowiseAI/Flowise/issues\" target=\"_blank\">Issue</a><br> <a href=\"https://www.docker.com/blog/how-to-use-the-postgres-docker-official-image/\" target=\"_blank\">Postgres Docker Info</a> <br> <br> <br> <a href=\"https://raw.githubusercontent.com/0nTheTop/docker-swarm-cookbook/main/timezones.txt\" target=\"_blank\">timedatectl list-timezones</a> to see all timezones",
            "name": "flowise",
            "env": [
                {
                    "name": "TZ",
                    "label": "Time-Zone",
                    "description": "Time Zone. Default is UTC.",
                    "default": "UTC"
                },
                {
                    "name": "POSTGRES_DB",
                    "label": "POSTGRES_DB",
                    "default": "flowise",
                    "description": "Specifies a name for your database or defaults to the POSTGRES_USER value when left blank."
                },
                {
                    "name": "POSTGRES_USER",
                    "label": "POSTGRES_USER",
                    "default": "flowiseuser",
                    "description": "Specifies a user with superuser privileges and a database with the same name. Postgres uses the default user when this is empty."
                },
                {
                    "name": "POSTGRES_PASSWORD",
                    "label": "POSTGRES_PASSWORD",
                    "default": "fl0wiser83632ai",
                    "description": "Password used by the POSTGRES_USER."
                },
                {
                    "name": "FLOWISE_PORT",
                    "default": "3000",
                    "description": "Port to expose flowise server. Default is 3000.",
                    "label": "FLOWISE_PORT"
                },
                {
                    "name": "FLOWISE_USERNAME",
                    "default": "user",
                    "description": "Username for flowise basic auth. Default is `user`.",
                    "label": "FLOWISE_USERNAME"
                },
                {
                    "name": "FLOWISE_PASSWORD",
                    "default": "1234",
                    "description": "Password for flowise basic auth. Default is 1234",
                    "label": "FLOWISE_PASSWORD"
                }
            ],
            "repository": {
                "url": "https://github.com/0nTheTop/docker-swarm-cookbook/",
                "stackfile": "cookbook/composeStacks/flowiseai/docker-compose.yml"
            },
            "type": 3,
            "logo": "https://raw.githubusercontent.com/0nTheTop/docker-swarm-cookbook/main/icons/flowiseai.png",
            "id": 13
        },
        {
            "description": "The world's most popular workflow automation platform for technical teams",
            "title": "n8n (Cookbook)",
            "categories": [
                "Low code",
                "Automation",
                "Cookbook"
            ],
            "platform": "linux",
            "name": "n8n",
            "note": "<a href=\"https://docs.n8n.io/https://docs.n8n.org/\" target=\"_blank\">n8n Docs</a><br> <br> <br> <a href=\"https://raw.githubusercontent.com/0nTheTop/docker-swarm-cookbook/main/timezones.txt\" target=\"_blank\">timedatectl list-timezones</a> to see all timezones",
            "env": [
                {
                    "name": "TZ",
                    "label": "Time-Zone",
                    "description": "Time Zone. Default is UTC.",
                    "default": "UTC"
                },
                {
                    "name": "POSTGRES_DB",
                    "label": "POSTGRES_DB",
                    "default": "n8n",
                    "description": "Specifies a name for your database or defaults to the POSTGRES_USER value when left blank."
                },
                {
                    "name": "POSTGRES_USER",
                    "label": "POSTGRES_USER",
                    "default": "n8n",
                    "description": "Specifies a user with superuser privileges and a database with the same name. Postgres uses the default user when this is empty."
                },
                {
                    "name": "POSTGRES_PASSWORD",
                    "label": "POSTGRES_PASSWORD",
                    "default": "n8N13203eiGht",
                    "description": "Password used by the POSTGRES_USER."
                },
                {
                    "name": "N8N_PORT",
                    "default": "5678",
                    "description": "The port to run the n8n server on. Default is 5678.",
                    "label": "N8N_PORT"
                },
                {
                    "name": "N8N_ENCRYPTION_KEY",
                    "description": "Encryption key used to encrypt sensitive data.",
                    "label": "N8N_ENCRYPTION_KEY"
                },
                {
                    "name": "N8N_SECURE_COOKIE",
                    "description": "Enables or disables secure cookie.",
                    "select": [
                        {
                            "text": "True",
                            "value": "true"
                        },
                        {
                            "text": "False",
                            "value": "false",
                            "default": true
                        }
                    ],
                    "label": "N8N_SECURE_COOKIE"
                },
                {
                    "name": "N8N_BASIC_AUTH_ACTIVE",
                    "description": "Enables or disables basic auth.",
                    "select": [
                        {
                            "text": "True",
                            "value": "true",
                            "default": true
                        },
                        {
                            "text": "False",
                            "value": "false"
                        }
                    ],
                    "label": "N8N_BASIC_AUTH_ACTIVE"
                },
                {
                    "name": "N8N_BASIC_AUTH_USER",
                    "default": "user",
                    "description": "Username for basic auth.",
                    "label": "N8N_BASIC_AUTH_USER"
                },
                {
                    "name": "N8N_BASIC_AUTH_PASSWORD",
                    "default": "password",
                    "description": "Password for basic auth.",
                    "label": "N8N_BASIC_AUTH_PASSWORD"
                },
                {
                    "name": "N8N_PROTOCOL",
                    "description": "Protocol used. Default: https",
                    "select": [
                        {
                            "text": "https",
                            "value": "https",
                            "default": true
                        },
                        {
                            "text": "http",
                            "value": "http"
                        }
                    ],
                    "label": "N8N_PROTOCOL"
                },
                {
                    "name": "WEBHOOK_URL",
                    "default": "https://n8n.example.com/",
                    "description": "Webhook URL.",
                    "label": "WEBHOOK_URL"
                }
            ],
            "repository": {
                "url": "https://github.com/0nTheTop/docker-swarm-cookbook/",
                "stackfile": "cookbook/composeStacks/n8n/docker-compose.yml"
            },
            "type": 3,
            "logo": "https://raw.githubusercontent.com/0nTheTop/docker-swarm-cookbook/main/icons/n8n.png",
            "id": 14
        }
    ]
}