version: "3.8"

services:
  langflow:
    hostname: langflow
    container_name: langflow-ai
    image: langflowai/langflow:latest
    ports:
      - mode: host
        published: ${LANGFLOW_PORT:-7860}
        target: 7860
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      TZ: ${TZ}
      LANGFLOW_DATABASE_URL: postgresql://${POSTGRES_USER:-langflow}:${POSTGRES_PASSWORD:-langflow345}@postgres:5432/${POSTGRES_DB:-langflow}
      # This variable defines where the logs, file storage, monitor data and secret keys are stored.
      LANGFLOW_CONFIG_DIR: /var/lib/langflow
      LANGFLOW_AUTO_LOGIN: ${LANGFLOW_AUTO_LOGIN:-True}
      LANGFLOW_SUPERUSER: ${LANGFLOW_SUPERUSER}
      LANGFLOW_SUPERUSER_PASSWORD: ${LANGFLOW_SUPERUSER_PASSWORD}
      LANGFLOW_SECRET_KEY: ${LANGFLOW_SECRET_KEY}
      LANGFLOW_NEW_USER_IS_ACTIVE: ${LANGFLOW_NEW_USER_IS_ACTIVE:-False}
      LANGFLOW_ACCESS_SAME_SITE: ${LANGFLOW_ACCESS_SAME_SITE:-lax}
      LANGFLOW_ACCESS_SECURE: ${LANGFLOW_ACCESS_SECURE:-False}
      LANGFLOW_ACCESS_HTTPONLY: ${LANGFLOW_ACCESS_HTTPONLY:-False}
    volumes:
      - langflow-data:/var/lib/langflow
    networks:
      - langflow
      # - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.langflow.rule=HostRegexp(`^langflow\\..*`)"
      - "traefik.http.routers.langflow.service=langflow-s"
      - "traefik.http.routers.langflow.entryPoints=web"
      - "traefik.http.services.langflow-s.loadbalancer.server.port=${LANGFLOW_PORT:-7860}"
      - "traefik.http.services.langflow-s.loadbalancer.sticky.cookie.name=stickycookie"
      - "traefik.http.services.langflow-s.loadbalancer.sticky.cookie.secure=true"

  postgres:
    hostname: postgres
    container_name: langflow-postgres
    image: postgres:16
    environment:
      TZ: ${TZ}
      POSTGRES_USER: ${POSTGRES_USER:-langflow}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-langflow345}
      POSTGRES_DB: ${POSTGRES_DB:-langflow}
    restart: always
    #ports:
    #  - "5432:5432"
    volumes:
      - langflow-postgres-data:/var/lib/postgresql/data
    networks:
      - langflow
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-langflow} -d ${POSTGRES_DB:-langflow}"]
      timeout: 20s
      interval: 10s
      retries: 5
      start_period: 30s

volumes:
  langflow-data:
    name: langflow-data
  langflow-postgres-data:
    name: langflow-postgres-data


networks:
  langflow:
    name: langflow
    driver: bridge
    attachable: true
#  traefik:
#    external: true