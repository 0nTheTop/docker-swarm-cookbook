version: "3.8"

services:
  n8n:
    hostname: n8n
    container_name: n8n
    image: n8nio/n8n
    ports:
      - mode: host
        published: ${N8N_PORT:-5678}
        target: 5678
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      TZ: ${TZ:-UTC}
      N8N_ENCRYPTION_KEY: ${N8N_ENCRYPTION_KEY:-verysecretkey}
      N8N_SECURE_COOKIE: ${N8N_SECURE_COOKIE:-false}
      N8N_BASIC_AUTH_ACTIVE: ${N8N_BASIC_AUTH_ACTIVE:-true}
      N8N_BASIC_AUTH_USER: ${N8N_BASIC_AUTH_USER:-user}
      N8N_BASIC_AUTH_PASSWORD: ${N8N_BASIC_AUTH_PASSWORD:-password}
      N8N_PROTOCOL: ${N8N_PROTOCOL:-https}
      WEBHOOK_URL: ${WEBHOOK_URL:-http://localhost:5678/webhook}
      DB_TYPE: postgresdb
      DB_POSTGRESDB_DATABASE: ${DB_POSTGRESDB_DATABASE:-n8n}
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_USER: ${POSTGRES_USER:-n8n}
      DB_POSTGRESDB_SCHEMA: n8n
      DB_POSTGRESDB_PASSWORD: ${DB_POSTGRESDB_PASSWORD:-n8N13203eiGht}
    volumes:
      - n8n-data:/home/node/.n8n
    networks:
      - n8n
      # - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.n8n.rule=HostRegexp(`^n8n\\..*`)"
      - "traefik.http.routers.n8n.service=n8n-s"
      - "traefik.http.routers.n8n.entryPoints=web"
      - "traefik.http.services.n8n-s.loadbalancer.server.port=${N8N_PORT:-5678}"
      - "traefik.http.services.n8n-s.loadbalancer.sticky.cookie.name=stickycookie"
      - "traefik.http.services.n8n-s.loadbalancer.sticky.cookie.secure=true"

  postgres:
    hostname: postgres
    container_name: n8n-postgres
    image: postgres:16
    environment:
      TZ: ${TZ:-UTC}
      POSTGRES_DB: ${POSTGRES_DB:-n8n}
      POSTGRES_USER: ${POSTGRES_USER:-n8n}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-n8N13203eiGht}
    restart: always
    #ports:
    #  - "5432:5432"
    volumes:
      - n8n-postgres-data:/var/lib/postgresql/data
    networks:
      - n8n
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-n8n} -d ${POSTGRES_DB:-n8n}"]
      timeout: 20s
      interval: 10s
      retries: 5
      start_period: 30s

volumes:
  n8n-data:
    name: n8n-data
  n8n-postgres-data:
    name: n8n-postgres-data


networks:
  n8n:
    name: n8n
    driver: bridge
    attachable: true
#  traefik:
#    external: true